/*
* Mixins allow document authors to define patterns of property value pairs,
* which can then be reused in other rulesets. The mixin name is a class
* selector that identifies the mixin being declared.
* The @mixin keyword must be followed by the mixin name and a declaration block.
*/
@mixin hover {
	-webkit-box-shadow: 0 70px 70px -35px $shadow;
	-moz-box-shadow: 0 70px 70px -35px $shadow;
	box-shadow: 0 70px 70px -35px $shadow;
	-webkit-transition: all.4s ease-in;
	-o-transition: all.4s ease-in;
	-moz-transition: all.4s ease-in;
	transition: all.4s ease-in;
}

@mixin gradient($from-color, $to-color) {
	background-color: mix($from-color, $to-color); /* Fallback */
	background-image: -webkit-gradient(linear, 0% 0%, 0% 100%, from($from-color), to($to-color));
	background-image: -webkit-linear-gradient(top, $from-color, $to-color);
	background-image: -moz-linear-gradient(top, $from-color, $to-color);
	background-image: -o-linear-gradient(top, $from-color, $to-color);
	// -ms-filter:	"progid:DXImageTransform.Microsoft.gradient(startColorStr='$from-color', EndColorStr='$to-color')";
}

@mixin box-sizing {
	-webkit-box-sizing: border-box;
	-moz-box-sizing: border-box;
	box-sizing: border-box;
}

@mixin transition($transition) {
	-webkit-transition: $transition;
	-moz-transition: $transition;
	-o-transition: $transition;
	transition: $transition;
}

@mixin transform($transform) {
	-webkit-transform: $transform;
	-moz-transform: $transform;
	-o-transform: $transform;
	-ms-transform: $transform;
	transform: $transform;
}

@mixin box-shadow($box-shadow) {
	-webkit-box-shadow: $box-shadow;
	-moz-box-shadow: $box-shadow;
	box-shadow: $box-shadow;
}

@mixin optional-at-root($sel) {
	@at-root #{if(not &, $sel, selector-append(&, $sel))} {
		@content;
	}
}

@mixin placeholder {
	@include optional-at-root("::-webkit-input-placeholder") {
		@content;
	}

	@include optional-at-root(":-moz-placeholder") {
		@content;
	}

	@include optional-at-root("::-moz-placeholder") {
		@content;
	}

	@include optional-at-root(":-ms-input-placeholder") {
		@content;
	}
}
