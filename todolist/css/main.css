/* cyan*/
/* blue*/
/* $bg_list: #52424A // violet*/
/*
* Mixins allow document authors to define patterns of property value pairs,
* which can then be reused in other rulesets. The mixin name is a class
* selector that identifies the mixin being declared.
* The @mixin keyword must be followed by the mixin name and a declaration block.
*/
* {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box; }

body {
  width: 100%;
  min-height: 100vh;
  font-family: "Open Sans", sans-serif;
  font-size: 16px;
  overflow-x: hidden;
  background-color: #3e787e;
  /* Fallback */
  background-image: -webkit-gradient(linear, 0% 0%, 0% 100%, from(#5FBDA8), to(#1E3354));
  background-image: -webkit-linear-gradient(top, #5FBDA8, #1E3354);
  background-image: -moz-linear-gradient(top, #5FBDA8, #1E3354);
  background-image: -o-linear-gradient(top, #5FBDA8, #1E3354); }

#toDoList {
  position: relative;
  width: 300px;
  padding: 50px 40px;
  margin: auto;
  margin-top: 55px;
  color: #fff;
  background: rgba(255, 255, 255, 0);
  -webkit-box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
  -moz-box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
  -webkit-transform: translate3d(0, -5px, 0);
  -moz-transform: translate3d(0, -5px, 0);
  -o-transform: translate3d(0, -5px, 0);
  -ms-transform: translate3d(0, -5px, 0);
  transform: translate3d(0, -5px, 0);
  -webkit-transition: all 0.4s ease-out;
  -moz-transition: all 0.4s ease-out;
  -o-transition: all 0.4s ease-out;
  transition: all 0.4s ease-out; }
  #toDoList:hover {
    -webkit-box-shadow: 0 70px 70px -35px rgba(0, 0, 0, 0.3);
    -moz-box-shadow: 0 70px 70px -35px rgba(0, 0, 0, 0.3);
    box-shadow: 0 70px 70px -35px rgba(0, 0, 0, 0.3);
    -webkit-transition: all 0.4s ease-in;
    -o-transition: all 0.4s ease-in;
    -moz-transition: all 0.4s ease-in;
    transition: all 0.4s ease-in;
    -webkit-transform: translate3d(0, 5px, 0);
    -moz-transform: translate3d(0, 5px, 0);
    -o-transform: translate3d(0, 5px, 0);
    -ms-transform: translate3d(0, 5px, 0);
    transform: translate3d(0, 5px, 0); }

.title {
  text-transform: uppercase;
  text-align: center;
  letter-spacing: 1px;
  margin-bottom: 16px; }

.make {
  padding: 5px 8px;
  outline: none;
  width: 80%;
  text-transform: uppercase;
  background: rgba(255, 255, 255, 0);
  border: none;
  border-bottom: 2px solid rgba(0, 0, 0, 0.3); }
  .make::-webkit-input-placeholder {
    color: #32343c; }
  .make:-moz-placeholder {
    color: #32343c; }
  .make::-moz-placeholder {
    color: #32343c; }
  .make:-ms-input-placeholder {
    color: #32343c; }

input[type="submit"] {
  width: 15%;
  padding: 5px 2px;
  outline: none;
  text-align: center;
  background: rgba(255, 255, 255, 0);
  color: #32343c;
  border: none;
  -webkit-box-shadow: 0 1px 3px 1px rgba(0, 0, 0, 0.3);
  -moz-box-shadow: 0 1px 3px 1px rgba(0, 0, 0, 0.3);
  box-shadow: 0 1px 3px 1px rgba(0, 0, 0, 0.3);
  -webkit-transition: all 0.4s ease-out;
  -moz-transition: all 0.4s ease-out;
  -o-transition: all 0.4s ease-out;
  transition: all 0.4s ease-out; }
  input[type="submit"]:hover {
    -webkit-box-shadow: 0 70px 70px -35px rgba(0, 0, 0, 0.3);
    -moz-box-shadow: 0 70px 70px -35px rgba(0, 0, 0, 0.3);
    box-shadow: 0 70px 70px -35px rgba(0, 0, 0, 0.3);
    -webkit-transition: all 0.4s ease-in;
    -o-transition: all 0.4s ease-in;
    -moz-transition: all 0.4s ease-in;
    transition: all 0.4s ease-in; }

.forAddItems {
  margin-bottom: 30px; }

.list {
  list-style: none;
  font-weight: 300;
  letter-spacing: 0.6px; }
  .list li {
    margin-left: 30px;
    margin-bottom: 5px; }
  .list span {
    position: relative;
    display: inline-block;
    line-height: 1.4; }

.btn {
  cursor: pointer; }

label {
  position: relative;
  display: inline-block;
  top: 0;
  left: 0;
  cursor: pointer; }
  label:after {
    content: "";
    position: absolute;
    top: 3px;
    left: -30px;
    display: block;
    height: 15px;
    width: 15px;
    border: 1px solid #cccccc;
    background: rgba(255, 255, 255, 0);
    cursor: pointer;
    outline: none; }

input[type=checkbox] {
  display: none; }
  input[type=checkbox]:checked + span {
    text-decoration: line-through; }
    input[type=checkbox]:checked + span::before {
      content: "";
      position: absolute;
      left: -32px;
      width: 15px;
      height: 15px;
      background: #cccccc; }

/*# sourceMappingURL=main.css.map */
